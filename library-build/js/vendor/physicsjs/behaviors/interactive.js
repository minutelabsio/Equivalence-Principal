/**
 * PhysicsJS v1.0.0-rc1 - 2014-03-23
 * A modular, extendable, and easy-to-use physics engine for javascript
 * http://wellcaffeinated.net/PhysicsJS
 *
 * Copyright (c) 2014 Jasper Palfree <jasper@wellcaffeinated.net>
 * Licensed MIT
 */

(function(e,t){typeof define=="function"&&define.amd?define(["physicsjs"],t):typeof exports=="object"?module.exports=t.apply(e,["physicsjs"].map(require)):t.call(e,e.Physics)})(this,function(e){return e.behavior("interactive",function(t){if(!document)return{};var n={el:null,moveThrottle:10,minVel:{x:-5,y:-5},maxVel:{x:5,y:5}},r=function(e){var t=0,n=0;if(e.offsetParent)do t+=e.offsetLeft,n+=e.offsetTop;while(e=e.offsetParent);return{left:t,top:n}},i=function(e){var t=r(e.target),n=e.changedTouches&&e.changedTouches[0]||e,i=n.pageX-t.left,s=n.pageY-t.top;return{x:i,y:s}};return{init:function(r){var s=this,o,u;t.init.call(this),this.options.defaults(n),this.options(r),this.mousePos=new e.vector,this.mousePosOld=new e.vector,this.offset=new e.vector,this.el=typeof this.options.el=="string"?document.getElementById(this.options.el):this.options.el;if(!this.el)throw"No DOM element specified";var a=function(n){var r=i(n),u;s._world&&(u=s._world.findOne({$at:new e.vector(r.x,r.y)}),u?(o=u.treatment,u.treatment="kinematic",u.state.vel.zero(),u.state.angular.vel=0,s.body=u,s.mousePos.clone(r),s.offset.clone(r).vsub(u.state.pos),r.body=u,s._world.emit("interact:grab",r)):s._world.emit("interact:poke",r))},f=e.util.throttle(function(t){var n,r;s.body&&(n=i(t),u=Date.now(),s.mousePosOld.clone(s.mousePos),s.mousePos.set(n.x,n.y))},s.options.moveThrottle),l=function(t){var n=i(t),r,a=Math.max(Date.now()-u,s.options.moveThrottle);s.mousePos.set(n.x,n.y),s.body&&(s.body.treatment=o,s.body.state.vel.clone(s.mousePos).vsub(s.mousePosOld).mult(1/a),s.body.state.vel.clamp(s.options.minVel,s.options.maxVel),s.body=!1),s._world&&s._world.emit("interact:release",n)};this.el.addEventListener("mousedown",a),this.el.addEventListener("touchstart",a),this.el.addEventListener("mousemove",f),this.el.addEventListener("touchmove",f),this.el.addEventListener("mouseup",l),this.el.addEventListener("touchend",l)},connect:function(e){e.on("integrate:positions",this.behave,this)},disconnect:function(e){e.off("integrate:positions",this.behave)},behave:function(e){var t=this,n;t.body&&(n=t.body.state,n.vel.clone(t.mousePos).vsub(t.offset).vsub(n.pos).mult(1/t.options.moveThrottle))}}}),e});